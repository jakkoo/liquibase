# This is a basic workflow to help you get started with Actions

name: SynchDBChangesToTargetEnv


# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "dev" ]


  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
  
    inputs:
      envname:
        description: 'target environment name '
        required: true
        options:
        - 'oracleoci'
        - 'development'
        - 'staging'
        - 'production'
        default: 'oracleoci'
      db-instance-name:
        description: 'database instance name '
        required: true
        default: 'thayeratp'
# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
   my-instances:
    runs-on: self-hosted
    defaults:
      run:
        working-directory: /thayer/envs/${{ github.event.inputs.envname || 'oracleoci' }}
        
    environment: ${{ github.event.inputs.envname || 'oracleoci' }}
    name: SQLcl Integration
    env:
      OCI_CLI_USER: ${{ secrets.OCI_CLI_USER }}
      OCI_CLI_TENANCY: ${{ secrets.OCI_CLI_TENANCY }}
      OCI_CLI_FINGERPRINT: ${{ secrets.OCI_CLI_FINGERPRINT }}
      OCI_CLI_KEY_FILE: ${{ secrets.OCI_CLI_KEY_FILE }}
      OCI_CLI_REGION: ${{ secrets.OCI_CLI_REGION }}
      OCI_INSTANCE_ID: ${{ secrets.OCI_INSTANCE_ID }}
      RUNNER_TOOL_CACHE: /thayer/envs/${{ github.event.inputs.envname || 'oracleoci' }}
      AGENT_TOOLSDIRECTORY: /thayer/envs/${{ github.event.inputs.envname || 'oracleoci' }}
      DB_ENV: ${{ github.event.inputs.envname || 'oracleoci' }}
      DB_INST: ${{ github.event.inputs.db-instance-name || 'thayeratp' }}
      DB_USER: ${{ format('DB_{0}_USER', ${{ env.DB_INST }} ) }}
      DB_PASSWD: ${{ format('DB_{0}_PASSWD',${{ env.DB_INST }} ) }}
      DB_TNSNAME: ${{ format('DB_{0}_TNSNAME',${{ env.DB_INST }} ) }}
  
    steps:
     
      - name: Use Workspace
        run: ls $GITHUB_WORKSPACE
      - name: checkout dev
        uses: actions/checkout@v4
        
        with:
         repository: ${{ github.repository }}
         ref: 'dev'
         path: lbfiles
         token: ${{ github.token }}

      - name: Run a one-line script
        run:  echo "test"
      - name : setup java
        uses: actions/setup-java@v4
        with:
         distribution: 'oracle'
         java-version: '21'
      - name: 'setup directories'
        working-directory: /thayer/envs/${{ env.DB_ENV }}/dbinstances/${{ inputs.db-instance-name }}
        run: |
          echo "SQLCL_HOME=/thayer/sqlcl/" >> "$GITHUB_ENV"
          # eval version
          CMD="${SQLCL_HOME}/bin/sql -version"
          eval "${CMD}"

          # export
          echo "${SQLCL_HOME}/bin" >> $GITHUB_PATH
          
        
          echo "lb update controller.xml" | sql ${{ secrets[env.DB_USER] }}/${{ secrets[env.DB_PASSWD] }}@${{ secrets[env.DB_TNSNAME] }}?TNS_ADMIN=/thayer/envs/${{ env.DB_ENV }}/dbinstances/${{ inputs.db-instance-name }}
          

          
         

    
     



