name: "oci db clone "
on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  my-instances:
    runs-on: self-hosted
    environment: oracleoci
    name: OCI DB CLONE
    env:
      OCI_CLI_USER: ${{ secrets.OCI_CLI_USER }}
      OCI_CLI_TENANCY: ${{ secrets.OCI_CLI_TENANCY }}
      OCI_CLI_FINGERPRINT: ${{ secrets.OCI_CLI_FINGERPRINT }}
      OCI_CLI_KEY_FILE: ${{ secrets.OCI_CLI_KEY_FILE }}
      OCI_CLI_REGION: ${{ secrets.OCI_CLI_REGION }}
      OCI_INSTANCE_ID: ${{ secrets.OCI_INSTANCE_ID }}
   
    steps:
      - name: Retrieve the OCID of a named compartment in tenancy
        uses: oracle-actions/run-oci-cli-command@v1.3.2
        id: find-compartment-id
        with:
          command: ' oci db autonomous-database create-from-clone --clone-type FULL --source-id ${{ secrets.sourceID }} --compute-model ECPU --compute-count 1 --data-storage-size-in-gbs 20 --admin-password ${{ secrets.DB_PASSWD }} --compartment-id ${{ secrets.OCI_COMPARTMENT_OCID }} --db-version 19c --db-name myTestDb
'
          silent: false
      - name: List the display name and shape of the instances in my compartment
        run: |
          echo ${{ steps.find-compartment-id.outputs.output }} | jq .
          echo outputContent=${{ steps.find-compartment-id.outputs.output }} >> $env:GITHUB_OUTPUT
          echo "Bash version: ${{ steps.find-compartment-id.outputs.outputContent }}"
      



