name: "login to ocir"
on:
#  schedule:
#    - cron: '*/5 * * * *'
  
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
jobs:
  get-ocir-repository-test:
    runs-on: self-hosted
    environment: oracleoci
    name: Get OCIR Repository Test
    env:
      OCI_CLI_USER: ${{ secrets.OCI_CLI_USER }}
      OCI_CLI_TENANCY: ${{ secrets.OCI_CLI_TENANCY }}
      OCI_CLI_FINGERPRINT: ${{ secrets.OCI_CLI_FINGERPRINT }}
      OCI_CLI_REGION: ${{ secrets.OCI_CLI_REGION }}
      OCI_CLI_KEY_FILE: ${{ secrets.OCI_CLI_KEY_FILE }}
    steps:
    
      - name: tst2
        run: export OCI_CLI_KEY_CONTENT3="$(cat /root/oracleidentitycloudservice_pri.pem)"
      - name: debg
        run: echo ${OCI_CLI_KEY_CONTENT}
      - name: userdtls
        run: echo $GITHUB_CONTEXT
      - name: Get or create an OCIR Repository
        uses: oracle-actions/get-ocir-repository@v1.3.0
        id: get-ocir-repository
        with:
          name: oraclelinux
          compartment: ${{ secrets.OCI_COMPARTMENT_OCID }}

      - name: Log into OCIR
        uses: oracle-actions/login-ocir@v1.3.0
        id: login-ocir
        with:
          auth_token: ${{ secrets.OCI_AUTH_TOKEN }}

      - name: Tag and push a container image
        id: tag-and-push-image
        run: |
          docker pull oraclelinux:8-slim
          docker tag "oraclelinux:8-slim" "${{ steps.get-ocir-repository.outputs.repo_path }}:8-slim"
          docker push "${{ steps.get-ocir-repository.outputs.repo_path }}:8-slim"
